services:
  db:
    image: postgres:16.0
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lms_network
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER" ]
      interval: 30s
      timeout: 5s
      retries: 5

  lms_drf:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/lms_drf
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - lms_network

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - lms_drf

  redis:
    image: redis:latest
    networks:
      - lms_network

  celery:
    build: .
    command: poetry run celery -A config worker -l INFO -P eventlet
    volumes:
      - .:/lms_drf
    depends_on:
      - db
      - redis
    env_file:
      - .env
    networks:
      - lms_network

  celery-beat:
    build: .
    command: poetry run celery -A config beat -l INFO
    volumes:
      - .:/lms_drf
    depends_on:
      - db
      - redis
    env_file:
      - .env
    networks:
      - lms_network

networks:
  lms_network:

volumes:
  postgres_data:
  static_volume:
